import logging
import random
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

# --- –õ–û–ì–ò ---
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# === –ù–ê–°–¢–†–û–ô–ö–ê ===
CENZORED = False  # üëâ False = –º–∞—Ç –∫–∞–∫ –µ—Å—Ç—å, True = –∑–∞–º–µ–Ω–∞ –∑–≤—ë–∑–¥–æ—á–∫–∞–º–∏

# --- –°–õ–û–í–ê –î–õ–Ø –¶–ï–ù–ó–£–†–´ ---
BAD_WORDS = {
    "–±–ª—è—Ç—å", "—Å—É–∫–∞", "–Ω–∞—Ö—É–π", "–ø–∏–∑–¥–µ—Ü", "–µ–±–∞—Ç—å", "—Ö—É–π", "–¥–∞—É–Ω", "–º—É–¥–∞–∫"
}

def censor(text: str) -> str:
    if not CENZORED:
        return text
    out = text
    for w in BAD_WORDS:
        out = out.replace(w, w[0] + "*"*(len(w)-1))
    return out

# --- –®–ê–ë–õ–û–ù–´ –û–¢–í–ï–¢–û–í ---
AGRO_TEMPLATES = [
    "–ß—ë —Ç—ã –Ω–µ—Å—ë—à—å, {user}? –ë–ª—è—Ç—å, —ç—Ç–æ –∂–µ –ø–∏–∑–¥–µ—Ü –∫–∞–∫–æ–π-—Ç–æ.",
    "–î–∞ —Ç—ã –∑–∞–µ–±–∞–ª —É–∂–µ, {user}, –¥—É–º–∞—Ç—å –Ω–µ –ø—Ä–æ–±–æ–≤–∞–ª?",
    "{user}, –Ω–∞—Ö—É–π —Ç–∞–∫–∏–µ —Ç—É–ø—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤–æ–æ–±—â–µ –∑–∞–¥–∞–≤–∞—Ç—å?",
    "–°–µ—Ä—å—ë–∑–Ω–æ? –ï–±–∞—Ç—å, —è –≤ –∞—Ö—É–µ —Å —Ç–µ–±—è.",
    "–ü–∏–∑–¥–µ—Ü, {user}, —Ç—ã –ø—Ä—è–º –∫–∞–∫ –¥–∞—É–Ω —Å–µ–π—á–∞—Å –≤—ã–≥–ª—è–¥–∏—à—å.",
    "–•—É–π–Ω—é –Ω–∞–ø–∏—Å–∞–ª –∏ —Ä–∞–¥—É–µ—Ç—Å—è‚Ä¶ –ë—Ä–∞–≤–æ!",
    "–°—É–∫–∞, {user}, –Ω—É —ç—Ç–æ –¥–∞–∂–µ –æ–±—ä—è—Å–Ω—è—Ç—å —Å—Ç—ã–¥–Ω–æ.",
    "–ö–æ—Ä–æ—á–µ, –∏–¥–∏ –Ω–∞—Ö—É–π —Å —Ç–∞–∫–∏–º–∏ —Ç–µ–º–∞–º–∏.",
    "–ë–ª—è—Ç—å, –Ω—É —Ç—ã –∏ –º—É–¥–∞–∫, {user}.",
    "–ï–±–∞—Ç—å –º–æ–π —Ö—É–π‚Ä¶ –Ø –≤ —à–æ–∫–µ —Å —ç—Ç–æ–≥–æ."
]

START_MSG = [
    "–Ø ‚Äî AGRO BOT. –ë—É–¥—É –æ—Ç–≤–µ—á–∞—Ç—å –∂—ë—Å—Ç–∫–æ, –±–µ–∑ —Å–æ–ø–ª–µ–π –∏ –ø–æ —Ö–∞—Ä–¥–∫–æ—Ä—É. üî•",
    "–ó–¥–∞—Ä–æ–≤–∞, {user}. –ì–æ—Ç–æ–≤—å –∂–æ–ø—É ‚Äî —Ç—É—Ç –±—É–¥–µ—Ç –≥—Ä—è–∑–Ω–æ. üòà"
]

HELP_MSG = (
    "–ö–æ–º–∞–Ω–¥—ã:\n"
    "/start ‚Äî –∑–∞–ø—É—Å–∫\n"
    "/help ‚Äî –ø–æ–º–æ—â—å\n\n"
    "–ü—Ä–æ—Å—Ç–æ –ø–∏—à–∏ —á—Ç–æ —É–≥–æ–¥–Ω–æ ‚Äî –∏ —è –≤—ã–¥–∞–º —Ç–µ–±–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç."
)

# --- –•–≠–ù–î–õ–ï–†–´ ---
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user.first_name or "–µ–±–∞—Ç—å –∫—Ç–æ"
    msg = random.choice(START_MSG).format(user=user)
    await update.message.reply_text(censor(msg))

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(censor(HELP_MSG))

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user.first_name or "–µ–±–∞—Ç—å –∫—Ç–æ"
    template = random.choice(AGRO_TEMPLATES)
    reply = template.format(user=user)
    await update.message.reply_text(censor(reply))

# --- MAIN ---
def main():
    import os
    TOKEN = os.getenv("TG_BOT_TOKEN")  # —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω
    if not TOKEN:
        print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏ TG_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –ø—Ä–æ–ø–∏—à–∏ —Å—Ç—Ä–æ–∫–æ–π –≤ –∫–æ–¥–µ")
        return

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_cmd))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("üî• AGRO BOT –∑–∞–ø—É—â–µ–Ω. –ñ–¥–∏ —Ö–∞—Ä–¥–∫–æ—Ä–∞!")
    app.run_polling()

if __name__ == "__main__":
    main()
